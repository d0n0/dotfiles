[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # Denite
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
hook_post_source = '''
    " file_rec
    if executable('ag')
        call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
    endif

    " grep
    if executable('ag')
        call denite#custom#var('grep', 'command', ['ag', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
        call denite#custom#var('grep', 'default_opts', [])
        call denite#custom#var('grep', 'recursive_opts', [])
    endif

    call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
    call denite#custom#source('file_mru', 'converters', ['converter_relative_word'])
'''

[[plugins]] # カーソルの位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # 言語毎のsyntaxやらインデントやらをいい感じにしてくれる
repo = 'sheerun/vim-polyglot'

[[plugins]] # hybrid-colorscheme
repo = 'w0ng/vim-hybrid'

[[plugins]] # onedark-colorscheme
repo = 'joshdick/onedark.vim'

[[plugins]] # vim-commentary
repo = 'tpope/vim-commentary'

[[plugins]] # surround.vim
repo = 'tpope/vim-surround'

[[plugins]] # nerdtree
repo = 'scrooloose/nerdtree'
hook_add = '''
    map <C-n> :NERDTreeToggle<CR>
'''
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1
'''

[[plugins]] # カッコ自動補完
repo = 'itmammoth/doorboy.vim'

[[plugins]] # git
repo = 'tpope/vim-fugitive'

[[plugins]] # ステータスライン
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
    \ 'colorscheme': 'onedark',
    \ 'active': {
    \     'left': [ [ 'mode', 'paste' ],
    \             [ 'fugitive', 'filename' ] ]
    \ },
    \ 'component_function': {
    \     'fugitive': 'LightlineFugitive',
    \     'readonly': 'LightlineReadonly',
    \     'modified': 'LightlineModified',
    \     'filename': 'LightlineFilename'
    \ },
    \     'separator': { 'left': '', 'right': '' },
    \     'subseparator': { 'left': '', 'right': '' }
    \ }

function! LightlineModified()
    if &filetype == "help"
    return ""
    elseif &modified
    return "+"
    elseif &modifiable
    return ""
    else
    return ""
    endif
endfunction

function! LightlineReadonly()
    if &filetype == "help"
    return ""
    elseif &readonly
    return ""
    else
    return ""
    endif
endfunction

function! LightlineFugitive()
    if exists('*fugitive#head')
        let branch = fugitive#head()
        return branch !=# '' ? ' '.branch : ''
    endif
    return ''
endfunction

function! LightlineFilename()
    return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
    \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
    \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
endfunction
'''

# [[plugins]] # tmuxのステータスラインをプリセットを生成
# repo = 'edkolev/tmuxline.vim'
# hook_add = '''
# let g:tmuxline_preset = {
#       \ 'a'    : '#S',
#       \ 'b'    : '#(cat ~/dotfiles/tmux/scripts/tmp/pwd.tmp)',
#       \ 'c'    : '',
#       \ 'win'  : '#I #W',
#       \ 'cwin' : '#I #W',
#       \ 'x'    : '%Y-%m-%d(%a) %R#(display_period.sh)',
#       \ 'y'    : '#(whoami)',
#       \ 'z'    : '#h'}
# '''
